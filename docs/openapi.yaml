openapi: 3.0.3
info:
  title: Meeting Scheduler API
  description: API for scheduling meetings, managing event slots, and retrieving availability recommendations.
  version: 1.0.0
servers:
  - url: http://localhost:8081

paths:
  /events:
    post:
      summary: Create an event
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                title:
                  type: string
                duration:
                  type: integer
                slots:
                  type: array
                  items:
                    type: object
                    properties:
                      startTime:
                        type: string
                        format: date-time
                      endTime:
                        type: string
                        format: date-time
                      timezone:
                        type: string
      responses:
        '201':
          description: Event created

  /events/{eventId}/slots:
    post:
      summary: Add event slots
      operationId: addEventSlots
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  startTime:
                    type: string
                    format: date-time
                  endTime:
                    type: string
                    format: date-time
                  timezone:
                    type: string
      responses:
        '200':
          description: Slots added

  /events/{eventId}/availability:
    post:
      summary: Submit user availability
      operationId: submitAvailability
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: userName
          in: query
          required: true
          schema:
            type: string
        - name: userEmailId
          in: query
          required: true
          schema:
            type: string
            format: email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  startTime:
                    type: string
                    format: date-time
                  endTime:
                    type: string
                    format: date-time
                  timezone:
                    type: string
      responses:
        '200':
          description: Availability submitted

  /events/{eventId}:
    get:
      summary: Get event details
      operationId: getEvent
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Event details returned

  /events/{eventId}/recommendations:
    get:
      summary: Get recommended meeting times
      operationId: getRecommendations
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Recommended times returned

  /health:
    get:
      summary: Health check endpoint
      operationId: healthCheck
      responses:
        '200':
          description: API is healthy